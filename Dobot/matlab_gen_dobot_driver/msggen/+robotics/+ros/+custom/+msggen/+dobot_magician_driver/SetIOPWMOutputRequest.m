classdef SetIOPWMOutputRequest < robotics.ros.Message
    %SetIOPWMOutputRequest MATLAB implementation of dobot_magician_driver/SetIOPWMOutputRequest
    %   This class was automatically generated by
    %   robotics.ros.msg.internal.gen.MessageClassGenerator.
    
    %   Copyright 2014-2019 The MathWorks, Inc.
    
    %#ok<*INUSD>
    
    properties (Constant)
        MessageType = 'dobot_magician_driver/SetIOPWMOutputRequest' % The ROS message type
    end
    
    properties (Constant, Hidden)
        MD5Checksum = '3fc962de45c64e2c043572de9a6bb961' % The MD5 Checksum of the message definition
    end
    
    properties (Access = protected)
        JavaMessage % The Java message object
    end
    
    properties (Dependent)
        Address
        Frequency
        DutyCycle
    end
    
    properties (Constant, Hidden)
        PropertyList = {'Address', 'DutyCycle', 'Frequency'} % List of non-constant message properties
        ROSPropertyList = {'address', 'duty_cycle', 'frequency'} % List of non-constant ROS message properties
    end
    
    methods
        function obj = SetIOPWMOutputRequest(msg)
            %SetIOPWMOutputRequest Construct the message object SetIOPWMOutputRequest
            import com.mathworks.toolbox.robotics.ros.message.MessageInfo;
            
            % Support default constructor
            if nargin == 0
                obj.JavaMessage = obj.createNewJavaMessage;
                return;
            end
            
            % Construct appropriate empty array
            if isempty(msg)
                obj = obj.empty(0,1);
                return;
            end
            
            % Make scalar construction fast
            if isscalar(msg)
                % Check for correct input class
                if ~MessageInfo.compareTypes(msg(1), obj.MessageType)
                    error(message('robotics:ros:message:NoTypeMatch', obj.MessageType, ...
                        char(MessageInfo.getType(msg(1))) ));
                end
                obj.JavaMessage = msg(1);
                return;
            end
            
            % Check that this is a vector of scalar messages. Since this
            % is an object array, use arrayfun to verify.
            if ~all(arrayfun(@isscalar, msg))
                error(message('robotics:ros:message:MessageArraySizeError'));
            end
            
            % Check that all messages in the array have the correct type
            if ~all(arrayfun(@(x) MessageInfo.compareTypes(x, obj.MessageType), msg))
                error(message('robotics:ros:message:NoTypeMatchArray', obj.MessageType));
            end
            
            % Construct array of objects if necessary
            objType = class(obj);
            for i = 1:length(msg)
                obj(i,1) = feval(objType, msg(i)); %#ok<AGROW>
            end
        end
        
        function address = get.Address(obj)
            %get.Address Get the value for property Address
            address = int32(obj.JavaMessage.getAddress);
        end
        
        function set.Address(obj, address)
            %set.Address Set the value for property Address
            validateattributes(address, {'numeric'}, {'nonempty', 'scalar'}, 'SetIOPWMOutputRequest', 'Address');
            
            obj.JavaMessage.setAddress(address);
        end
        
        function frequency = get.Frequency(obj)
            %get.Frequency Get the value for property Frequency
            frequency = single(obj.JavaMessage.getFrequency);
        end
        
        function set.Frequency(obj, frequency)
            %set.Frequency Set the value for property Frequency
            validateattributes(frequency, {'numeric'}, {'nonempty', 'scalar'}, 'SetIOPWMOutputRequest', 'Frequency');
            
            obj.JavaMessage.setFrequency(frequency);
        end
        
        function dutycycle = get.DutyCycle(obj)
            %get.DutyCycle Get the value for property DutyCycle
            dutycycle = single(obj.JavaMessage.getDutyCycle);
        end
        
        function set.DutyCycle(obj, dutycycle)
            %set.DutyCycle Set the value for property DutyCycle
            validateattributes(dutycycle, {'numeric'}, {'nonempty', 'scalar'}, 'SetIOPWMOutputRequest', 'DutyCycle');
            
            obj.JavaMessage.setDutyCycle(dutycycle);
        end
    end
    
    methods (Access = protected)
        function cpObj = copyElement(obj)
            %copyElement Implements deep copy behavior for message
            
            % Call default copy method for shallow copy
            cpObj = copyElement@robotics.ros.Message(obj);
            
            % Create a new Java message object
            cpObj.JavaMessage = obj.createNewJavaMessage;
            
            % Iterate over all primitive properties
            cpObj.Address = obj.Address;
            cpObj.Frequency = obj.Frequency;
            cpObj.DutyCycle = obj.DutyCycle;
        end
        
        function reload(obj, strObj)
            %reload Called by loadobj to assign properties
            obj.Address = strObj.Address;
            obj.Frequency = strObj.Frequency;
            obj.DutyCycle = strObj.DutyCycle;
        end
    end
    
    methods (Access = ?robotics.ros.Message)
        function strObj = saveobj(obj)
            %saveobj Implements saving of message to MAT file
            
            % Return an empty element if object array is empty
            if isempty(obj)
                strObj = struct.empty;
                return
            end
            
            strObj.Address = obj.Address;
            strObj.Frequency = obj.Frequency;
            strObj.DutyCycle = obj.DutyCycle;
        end
    end
    
    methods (Static, Access = {?matlab.unittest.TestCase, ?robotics.ros.Message})
        function obj = loadobj(strObj)
            %loadobj Implements loading of message from MAT file
            
            % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = robotics.ros.custom.msggen.dobot_magician_driver.SetIOPWMOutputRequest.empty(0,1);
                return
            end
            
            % Create an empty message object
            obj = robotics.ros.custom.msggen.dobot_magician_driver.SetIOPWMOutputRequest;
            obj.reload(strObj);
        end
    end
end
